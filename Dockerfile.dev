# syntax=docker/dockerfile:1
FROM oven/bun:1.1-alpine AS base

# Development stage
FROM base AS dev
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    git \
    openssh-client \
    curl

# Create non-root user (matches production UID/GID)
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    mkdir -p /home/nextjs/.bun && \
    chown -R nextjs:nodejs /app /home/nextjs/.bun

# Copy files with proper permissions
COPY --chown=nextjs:nodejs package.json bun.lock ./

# Install dependencies as user
USER nextjs
RUN bun install

# Copy remaining files
COPY --chown=nextjs:nodejs . .

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s \
    CMD curl -f http://localhost:3000 || exit 1

# Entrypoint
COPY --chown=nextjs:nodejs docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh
ENTRYPOINT ["docker-entrypoint.sh"]

# Environment
ENV NODE_ENV=development \
    PORT=3000 \
    HOSTNAME=0.0.0.0 \
    BUN_INSTALL=/home/nextjs/.bun \
    PATH=$BUN_INSTALL/bin:$PATH

EXPOSE 3000
CMD ["bun", "run", "dev"]